[{"C:\\Users\\itsme\\OneDrive\\Desktop\\app\\Camera-app-react\\src\\index.js":"1","C:\\Users\\itsme\\OneDrive\\Desktop\\app\\Camera-app-react\\src\\App.js":"2"},{"size":219,"mtime":1676152015151,"results":"3","hashOfConfig":"4"},{"size":1998,"mtime":1676153009180,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ve7xd9",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"C:\\Users\\itsme\\OneDrive\\Desktop\\app\\Camera-app-react\\src\\index.js",[],[],"C:\\Users\\itsme\\OneDrive\\Desktop\\app\\Camera-app-react\\src\\App.js",["13"],[],"import React, { useRef, useEffect, useState } from 'react';\n\nfunction App() {\n  const videoRef = useRef(null);\n  const photoRef = useRef(null);\n  const [hasPhoto, setHasPhoto] = useState(false);\n  const [stream, setStream] = useState(null);\n\n  const getVideo = async () => {\n    try {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      const camera = devices.find(device => device.kind === 'videoinput');\n      \n      if (!camera) {\n        throw new Error('No camera found');\n      }\n      \n      const mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: { deviceId: camera.deviceId },\n        audio: false\n      });\n      \n      setStream(mediaStream);\n      let video = videoRef.current;\n      video.srcObject = mediaStream;\n      video.play();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const takePhoto = () => {\n    const width = 400;\n    const height = width / (16/9);\n    let video = videoRef.current;\n    let photo = photoRef.current;\n    photo.width = width;\n    photo.height = height;\n    let ctx = photo.getContext('2d');\n    ctx.drawImage(video, 0, 0, width, height);\n    setHasPhoto(true);\n  };\n\n  const closePhoto = () => {\n    let photo = photoRef.current;\n    let ctx = photo.getContext('2d');\n    ctx.clearRect(0, 0, photo.width, photo.height);\n    setHasPhoto(false);\n    \n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      setStream(null);\n    }\n  };\n  useEffect(() => {\n    getVideo();\n\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }\n  , []);   \n  return (\n    <div className=\"App\">\n      <div className=\"Camera\">\n        <video ref={videoRef} />\n        <button onClick={takePhoto}>SNAP!</button>\n      </div>\n      <div className={'result' + (hasPhoto ? ' hasPhoto' : '')}>\n        <canvas ref={photoRef} />\n        <button onClick={closePhoto}>Close</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"14","severity":1,"message":"15","line":64,"column":5,"nodeType":"16","endLine":64,"endColumn":7,"suggestions":"17"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stream'. Either include it or remove the dependency array.","ArrayExpression",["18"],{"desc":"19","fix":"20"},"Update the dependencies array to be: [stream]",{"range":"21","text":"22"},[1622,1624],"[stream]"]